from collections import deque
def dailyTemperatures(T: [int]) -> [int]:
    answers = [0]*len(T)
    

print(dailyTemperatures([73, 74, 75, 71, 69, 72, 76, 73]))
#dailyTemperatures
'''
Brute Force Attempt
    next_high = [0]*len(T)
    for index,temp in enumerate(T):
        count = 0
        high_temp = 0
        for next_temp in range(index+1, len(T)):
            count +=1
            if T[next_temp] > temp:
                high_temp = T[next_temp]
                break
        if high_temp != 0:
            next_high[index] = count


Second Attempt using deque but did not work because I kept popping elements

    next_high = [-1]*71
    answer = [0]*len(T)
    for index,temp in enumerate(T):
        if next_high[temp-30] == -1:
            next_high[temp-30] = deque()
        next_high[temp-30].append(index)
    for index, temp in enumerate(T):
        for high_index in range(temp+1-30, 71):
            if next_high[high_index] != -1:
                if len(next_high[high_index]) > 0 and next_high[high_index][0] > index:
                    answer[index] = next_high[high_index].popleft()-index
                    break



    return next_high
'''